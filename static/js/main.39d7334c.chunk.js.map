{"version":3,"sources":["components/formComponent/form.js","components/dataComponent/data.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","onSubmit","this","props","getWeather","type","name","placeholder","Component","Data","pressure","temp","humidity","desc","error","App","state","e","a","preventDefault","myCountry","target","elements","country","value","myCity","city","fetch","api","json","data","console","log","setState","main","weather","description","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAEMA,E,4JACF,WACI,OAEI,uBAAMC,UAAU,OAAOC,SAAYC,KAAKC,MAAMC,WAA9C,UACI,uBAAOC,KAAK,OAAOC,KAAK,UAAUC,YAAY,YAC9C,uBAAOF,KAAK,OAAOC,KAAK,OAAOC,YAAY,SAC3C,wD,GAPGC,aAcJT,ICdTU,G,kKAEF,WACI,IAAIC,EAAWR,KAAKC,MAAMO,SACtBC,EAAOT,KAAKC,MAAMQ,KAClBC,EAAWV,KAAKC,MAAMS,SACtBC,EAAOX,KAAKC,MAAMU,KAClBC,EAAQZ,KAAKC,MAAMW,MACvB,OAAGJ,GAAYC,GAAQC,GAAYC,EAE3B,sBAAKb,UAAU,OAAf,UACKU,GAAY,kCAAI,4CAAJ,IAAwBA,EAAxB,OACZC,GAAQ,kCAAI,+CAAJ,IAA2BA,EAA3B,OACRC,GAAY,kCAAI,4CAAJ,IAAwBA,EAAxB,OACZC,GAAQ,kCAAI,+CAAJ,IAA2BA,EAA3B,UAGXC,EAEF,oBAAGd,UAAU,QAAb,cAAuBc,EAAvB,OAGG,S,GAtBAN,cA6BJC,IC3BTM,E,4MAEJC,MAAQ,CACNN,SAAU,GACVC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNC,MAAO,I,EAITV,W,uCAAa,WAAOa,GAAP,qBAAAC,EAAA,6DACXD,EAAEE,iBACEC,EAAYH,EAAEI,OAAOC,SAASC,QAAQC,MACtCC,EAASR,EAAEI,OAAOC,SAASI,KAAKF,MAHzB,SAKOG,MAAM,oDAAD,OAC+BF,EAD/B,cAC2CL,EAD3C,4CALZ,cAKLQ,EALK,gBASQA,EAAIC,OATZ,OASLC,EATK,OAUXC,QAAQC,IAAIF,GAERV,GAAaK,GACf,EAAKQ,SAAS,CACZvB,SAAUoB,EAAKI,KAAKxB,SACpBC,KAAMmB,EAAKI,KAAKvB,KAChBC,SAAUkB,EAAKI,KAAKtB,SACpBC,KAAMiB,EAAKK,QAAQ,GAAGC,YACtBtB,MAAO,KAETiB,QAAQC,IAAI,EAAKhB,QAEjB,EAAKiB,SAAS,CACZvB,SAAU,GACVC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNC,MAAO,8BA3BA,4C,kGAgCb,WACE,OACE,sBAAKd,UAAU,MAAf,UACE,+CACA,sBAAKA,UAAU,SAAf,UAEE,cAAC,EAAD,CAAMI,WAAYF,KAAKE,aAEvB,cAAC,EAAD,CACEM,SAAUR,KAAKc,MAAMN,SACrBC,KAAMT,KAAKc,MAAML,KACjBC,SAAUV,KAAKc,MAAMJ,SACrBC,KAAMX,KAAKc,MAAMH,KACjBC,MAAOZ,KAAKc,MAAMF,kB,GAxDZN,aAiEHO,ICzDAsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.39d7334c.chunk.js","sourcesContent":["import React , {Component} from 'react';\r\nimport './form.css';\r\nclass Form extends Component{\r\n    render(){\r\n        return(\r\n\r\n            <form className=\"form\" onSubmit = {this.props.getWeather} >\r\n                <input type=\"text\" name=\"country\" placeholder=\"Country\"/>\r\n                <input type=\"text\" name=\"city\" placeholder=\"City\"/>\r\n                <button>Get Weather</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Form","import React , {Component} from 'react';\r\nimport './data.css';\r\nclass Data extends Component{\r\n    \r\n    render(){\r\n        let pressure = this.props.pressure;\r\n        let temp = this.props.temp;\r\n        let humidity = this.props.humidity;\r\n        let desc = this.props.desc;\r\n        let error = this.props.error\r\n        if(pressure && temp && humidity && desc){\r\n            return(\r\n                <div className=\"data\">\r\n                    {pressure && <p> <b>Pressure : </b> {pressure} </p>}\r\n                    {temp && <p> <b>Temperature : </b> {temp} </p>}\r\n                    {humidity && <p> <b>Humidity : </b> {humidity} </p>}\r\n                    {desc && <p> <b>Description : </b> {desc} </p>}\r\n                </div>\r\n            )\r\n        }else if (error){\r\n            return (\r\n                <p className=\"error\"> {error} </p>\r\n            ) \r\n        }else {\r\n            return null \r\n        }\r\n       \r\n    }\r\n}\r\n\r\n\r\nexport default Data","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/formComponent/form\";\nimport Data from \"./components/dataComponent/data\";\nclass App extends Component {\n  //initial state\n  state = {\n    pressure: \"\",\n    temp: \"\",\n    humidity: \"\",\n    desc: \"\",\n    error: \"\",\n  };\n\n  //this method will bring the data from the API\n  getWeather = async (e) => {\n    e.preventDefault();\n    let myCountry = e.target.elements.country.value; //will target my country  input\n    let myCity = e.target.elements.city.value; //will target my city  input\n    //making the api dynamic by applying the city and country\n    const api = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${myCity}%2C${myCountry}&appid=e36ed364400282e43250b6c4c0274d44`\n    );\n    //converting data into json\n    const data = await api.json();\n    console.log(data);\n\n    if (myCountry && myCity) {\n      this.setState({\n        pressure: data.main.pressure,\n        temp: data.main.temp,\n        humidity: data.main.humidity,\n        desc: data.weather[0].description,\n        error: \"\",\n      });\n      console.log(this.state);\n    } else {\n      this.setState({\n        pressure: \"\",\n        temp: \"\",\n        humidity: \"\",\n        desc: \"\",\n        error: \"Please Enter a Valid Data\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1> Weathe App  </h1>\n        <div className=\"holder\">\n          \n          <Form getWeather={this.getWeather} />\n\n          <Data\n            pressure={this.state.pressure}\n            temp={this.state.temp}\n            humidity={this.state.humidity}\n            desc={this.state.desc}\n            error={this.state.error}\n          />\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}